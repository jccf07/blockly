'use strict';
goog.provide ( 'Blockly.Msg.fr');
goog.require ( 'Blockly.Msg');

Blockly.Msg.INOUT_HIGH_LEVEL = "1(estado alto)";
Blockly.Msg.INOUT_LOW_LEVEL = "0(estado bajo)";
Blockly.Msg.ARD_TYPE_CHAR = "carácter";
Blockly.Msg.ARD_TYPE_TEXT = "texto";
Blockly.Msg.ARD_TYPE_BOOL = "binario";
Blockly.Msg.ARD_TYPE_SHORT = "byte";
Blockly.Msg.ARD_TYPE_NUMBER = "entero";
Blockly.Msg.ARD_TYPE_LONG = "entero largo";
Blockly.Msg.ARD_TYPE_DECIMAL = "número de coma flotante";
Blockly.Msg.ARD_TYPE_ARRAY = "cadena";
Blockly.Msg.ARD_TYPE_NULL = "vacío";
Blockly.Msg.ARD_TYPE_UNDEF = "no definido";
Blockly.Msg.ARD_TYPE_VOLATILE = "entero volatil";
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "typing missing on a block";
Blockly.Msg.ARDUINO_BETWEEN = "número aleatorio entre";
Blockly.Msg.ARDUINO_BETWEEN_AND = "y";
Blockly.Msg.ARDUINO_VAR_DECLARE="estados";
Blockly.Msg.ARDUINO_VAR_AS = "cómo";
Blockly.Msg.ARDUINO_VAR_VAL = "de valor";
Blockly.Msg.base_def_const = "fijar";
Blockly.Msg.base_define_const = "que es equivalente a";
Blockly.Msg.base_define_const_tooltip = "permite al programador dar un nombre a cualquier valor";
Blockly.Msg.type = "establecer un valor como el tipo seleccionado";
Blockly.Msg.ADD_COMMENT = "Agregar comentario";
Blockly.Msg.CHANGE_VALUE_TITLE = "Cambiar valor:";
Blockly.Msg.CLEAN_UP = "Limpiar Bloques";
Blockly.Msg.COLLAPSE_ALL = "Minimizar Bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Minimizar Bloque";
Blockly.Msg.CONTROLS_SWITCH_VAR_TITLE = "cuando";
Blockly.Msg.CONTROLS_SWITCH_MSG_DEFAULT = "por defecto";
Blockly.Msg.CONTROLS_SWITCH_MSG_CASEBREAK = "es";
Blockly.Msg.CONTROLS_SWITCH_MSG_SWITCHVAR = "si la variable es válida";
Blockly.Msg.CONTROLS_SWITCH_MSG_DO = "hacer";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_1 = "Si un valor es verdadero, ejecute los siguientes comandos";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_2 = "Si un valor es verdadero, ejecute el primer bloque de comandos, de lo contrario, ejecute el siguiente bloque de comandos";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_3 = "Si un valor es verdadero, ejecute el primer bloque de comandos, de lo contrario, ejecute el siguiente bloque de comandos si la condición es verdadera";
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP_4 = "Si un valor es verdadero, ejecute el primer bloque de comandos, de lo contrario, ejecute el siguiente bloque de comandos si la condición es verdadera. Si no se cumple ninguna condición, cree el bloque de comandos predeterminado" ;
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "salir del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "pasar a la siguiente iteración";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Salir del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Omita el resto de este ciclo y continúe con la siguiente iteración";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advertencia: este bloque debe usarse en un bucle";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "para cada elemento %1 en la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento de una lista, asigne el valor del elemento a la variable %1, y luego ejecute las declaraciones";
Blockly.Msg.CONTROLS_FOR_TITLE = "para %1 comprendido de %2 a %3 en pasos de %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Establezca la variable %1 en valores desde el número inicial hasta el número final, incrementándolo en un paso específico, y ejecute las declaraciones especificadas";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar Condición";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Agregar una condición final";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Agregar, borrar o reordenar";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "otro";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "si no";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, entonces ejecute algunas órdenes";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, ejecute el primer bloque de órdenes, de lo contrario ejecute el segundo bloque de órdenes";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es verdadero, ejecute el primer bloque de órdenes, de lo contrario, si el segundo valor es verdadero, ejecute el segundo bloque de órdenes";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es verdadero, ejecute el primer bloque de órdenes, de lo contrario, si el segundo valor es verdadero, ejecute el segundo bloque de órdenes. Si ninguno de los valores  ​​es verdadero, ejecute el último bloque de órdenes ";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "hacer";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 tiempo";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ejecutar sentencias varias veces";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir arriba";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir siempre que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mientras un valor sea falso, ejecute las instrucciones";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Siempre que un valor sea verdadero, ejecute las instrucciones";
Blockly.Msg.DELETE_ALL_BLOCKS = "¿Eliminar estos %1 bloques?";
Blockly.Msg.DELETE_BLOCK = "Eliminar bloque";
Blockly.Msg.DELETE_VARIABLE = "Eliminar variable %1";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "¿Eliminar %1 usos de la variable%2?";
Blockly.Msg.DELETE_X_BLOCKS = "Eliminar%1 bloques";
Blockly.Msg.DISABLE_BLOCK = "Deshabilitar bloque";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.ENABLE_BLOCK = "Activar Bloque";
Blockly.Msg.EXPAND_ALL = "Maximizar bloques";
Blockly.Msg.EXPAND_BLOCK = "Maximizar bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas externasExternal Inputs";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.INLINE_INPUTS = "Entradas en Línea";
Blockly.Msg.LISTS_CREATE1 = "crear una lista";
Blockly.Msg.LISTS_CREATE2 = "con";
Blockly.Msg.LISTS_CREATE_TOOLTIP = "Crear una lista con el número deseado de elementos";
Blockly.Msg.LISTS_append = 'agregar %1 al final de %2';
Blockly.Msg.LISTS_append_TOOLTIP = 'agregar un elemento al final de la lista';
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, Eliminar, o Reordenar";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear una lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "devuelve una cadena o lista con cualquier número de elementos";
Blockly.Msg.LISTS_GET = "el elemento";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# desde el final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#"; // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "Obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "útimo";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = ""; // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "devuelve el primer elemento de una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "devuelve el elemento a la posición especificada en una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "devolver el último elemento de una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "devuelve un elemento aleatorio en una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Elimina y devuelve el elemento en la posición especificada en una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Elimina el elemento en la posición especificada en una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio de una lista";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # desde el final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "subir a #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener la sublista desde el principio";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener la sublista de # desde el final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener la sublista de #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = ""; // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 es el último elemento";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 es el primer elemento";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encuentra la primera instancia del elemento";
Blockly.Msg.LISTS_INDEX_OF_LAST = "encuentra la última instancia del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "devuelve el índice de la primera / última aparición del elemento en la lista, devuelve%1 si no se encuentra el elemento";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 está vacío";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "devuelve verdadero si la lista está vacía";
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de%1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "devuelve la longitud de una lista";
Blockly.Msg.LISTS_REPEAT_TITLE = "crear una lista con el elemento%1 repetido%2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crear una lista que consiste en el valor proporcionado repetido el número especificado de veces";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "igual";
Blockly.Msg.LISTS_of = "de";
Blockly.Msg.LISTS_SET_INDEX_SET = "poner el elemento";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al comienzo de una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Inserta el elemento en la posición especificada en una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Agregar elemento al final de una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento al azar en una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fijar el primer elemento de una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Actualizar el elemento a la posición especificada en una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fijar el último elemento en una lista";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fijar un elemento aleatorio en una lista";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "devuelve un estado lógico 0 o 1";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadero";
Blockly.Msg.compare = "devuelve verdadero si un valor está en un intervalo";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "devuelve verdadero si ambas entradas son iguales";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "devuelve verdadero si la primera entrada es mayor que la segunda";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "devuelve verdadero si la primera entrada es mayor o igual que la segunda";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "devuelve verdadero si la primera entrada es más pequeña que la segunda";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "devuelve verdadero si la primera entrada es más pequeña o igual a la segunda";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "devuelve verdadero si las dos entradas son diferentes";
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "devuelve verdadero si la entrada es falsa, devuelve falso si la entrada es verdadera";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "devuelve null";
Blockly.Msg.LOGIC_OPERATOR = [["y", "y"], ["o", "o"], ["o exclusivo", "xor"], ["cambio a la izquierda", "cambioI"], ["cambio a la izquierda", "cambioD"]];
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "devuelve verdadero si ambas entradas son verdaderas";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "devuelve verdadero si al menos una de las entradas es verdadera";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_xor = "devuelve verdadero si solo una de las entradas es verdadera";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_shiftR = "cambio a la dereche \ n";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_shiftL = "hace un cambio a la izquierda";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "if false";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "if true";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test' If it is true, return the value 'if true', else return the value 'if false'";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+"; // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "returns the sum of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "returns the quotient of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "returns the difference of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "returns the product of the two numbers";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "returns the first number raised to the power of the second";
Blockly.Msg.MATH_CHANGE_TITLE = "increment variable %1 of %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to the variable %1";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "returns one of the current constants: π (3.141 ...), e (2.718 ...), φ (1.618 ...), sqrt (2) (1.414 ...), sqrt (½) (0.707 ...), or ∞ (infinite) ";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "force %1 between %2 and %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified (included) limits";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷"; // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";
Blockly.Msg.MATH_IS_EVEN = "is even";
Blockly.Msg.MATH_IS_NEGATIVE = "is negative";
Blockly.Msg.MATH_IS_ODD = "is odd";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";
Blockly.Msg.MATH_IS_PRIME = "is prime";
Blockly.Msg.MATH_IS_TOOLTIP = "returns true or false if a number is even, odd, prime, integer, positive, negative, or if it is divisible by a number";
Blockly.Msg.MATH_IS_WHOLE = "is integer";
Blockly.Msg.MATH_MODULO_TITLE = "remainder %1 ÷%2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "returns the rest of the Euclidean division of the two numbers";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×"; // untranslated
Blockly.Msg.MATH_NUMBER_TOOLTIP = "A number";
Blockly.Msg.MATH_ONLIST_HELPURL = ""; // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "list average";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "median of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majority of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "random element of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of the list";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "sum of the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Returns the average (arithmetic) numeric values ​​in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "returns the largest number in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "returns the median number of the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "returns the smallest number in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "returns a list of the most common element (s) in the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "returns an item in the random list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "returns the standard deviation of the list";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "returns the sum of all the numbers in the list";
Blockly.Msg.MATH_POWER_SYMBOL = "^"; // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "random fraction";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "returns a random fraction between 0.0 (inclusive) and 1.0 (excluded)";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer%1 & %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "returns a random integer between the two specified, included limits";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "round";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "round down";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "round up";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number above or below";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolute value";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "square root";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "returns the absolute value of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "returns e to the power of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "returns the natural logarithm of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "returns the base 10 logarithm of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "returns the opposite of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "returns 10 to the power of a number";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "returns the square root of a number";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-"; // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos"; // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin"; // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan"; // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos"; // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin"; // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan"; // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "returns the arccosinus of a number";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "returns the arcsine of a number";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "returns the arctangent of a number";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "returns the cosine of an angle in degrees";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "returns the sine of an angle in degrees";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "returns the tangent of an angle in degrees";
Blockly.Msg.NEW_VARIABLE = "Create a variable";
Blockly.Msg.NEW_VARIABLE_TITLE = "New name of the variable";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = ""; // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Execute user-defined%1 function";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Execute user-defined function%1 and use its result";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create %1";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "do";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Create a procedure or function without data return";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Create a procedure or function with a data return";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate settings";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight the function definition";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "returns the specified value";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block must be used in a procedure or function definition";
Blockly.Msg.PROCEDURES_MUTATORARG_TYPE = "of type";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an entry to the procedure or function";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "input arguments";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add, delete, or rearrange";
Blockly.Msg.REDO = "Redo";
Blockly.Msg.REMOVE_COMMENT = "Delete a comment";
Blockly.Msg.RENAME_VARIABLE = "Rename variable '%1'";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename variables '%1'";
//Array
Blockly.Msg.ARRAY_CREATE_EMPTY_TITLE = 'empty!';
Blockly.Msg.tab_create = "Create block 'element of array %1'";
Blockly.Msg.tab_create_fix = "Create Block 'put an element from array %1 to '";
Blockly.Msg.ARRAY_CREATE_WITH = "made up of";
Blockly.Msg.ARRAY_taille = "size";
Blockly.Msg.ARRAY_contenu = "which contains";
Blockly.Msg.ARRAY_CREATE_WITH_CONTAINER_TITLE_ADD = "list or array";
Blockly.Msg.ARRAY_CREATE_WITH_CONTAINER_TOOLTIP = "Add, Delete, or Reorder";
Blockly.Msg.ARRAY_CREATE_WITH_INPUT_WITH = "elements";
Blockly.Msg.ARRAY_CREATE_WITH_ITEM_TITLE = "element";
Blockly.Msg.ARRAY_CREATE_WITH_TOOLTIP = "Returns a list with a number of items";
Blockly.Msg.ARRAY_GETINDEX_ITEM = "the element of the array";
Blockly.Msg.ARRAY_GETINDEX_ITEM2 = "array";
Blockly.Msg.ARRAY_GETINDEX_TOOLTIP1 = "returns the value stored in the list";
Blockly.Msg.ARRAY_GETINDEX_TOOLTIP2 = "created an array of the selected type";
Blockly.Msg.ARRAY_GETINDEX_TOOLTIP3 = "fix an element of the list or array to the indicated value";
Blockly.Msg.ARRAY_create = "set array";
Blockly.Msg.ARRAY_fixe = "put the element of the array";
Blockly.Msg.ARRAY_dim = "size of";
Blockly.Msg.ARRAY_index = "index";
Blockly.Msg.ARRAY_append_tooltip = "add an item at the end of the list or array";
Blockly.Msg.ARRAY_append_url = "";
Blockly.Msg.size = "array size";
Blockly.Msg.size_TOOLTIP = "returns the size of the list or array";
//text
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Add an item";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "text";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, Delete, or Reorder";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 is empty";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "returns true if the supplied text is empty";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "text created with";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "returns a text aggregating any number of elements";
Blockly.Msg.TEXT_LENGTH_TITLE = "length of %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "returns the number of letters (including spaces) of the supplied text";
Blockly.Msg.TEXT_PRINT_TITLE = "show %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Show text, number or other specified value";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, a word or a phrase";
Blockly.Msg.TODAY = "Today";
Blockly.Msg.UNDO = "Cancel";
Blockly.Msg.VARIABLES_AS = "type";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "var";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create block 'set variable %1 to '";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "returns the value of this variable";
Blockly.Msg.VARIABLES_SET = "put the variable";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Create block %1";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Set the variable to the specified value";
Blockly.Msg.var_set_init = "set variable";
Blockly.Msg.var_set_init_tooltip = "Declare and initialize the variable of the specified type and value";
Blockly.Msg.ARDUINO_VAR_CONST = "set constant";
Blockly.Msg.ARDUINO_VAR_CONST_tooltip = "Declares a constant of the specified type and value";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable called %1 already exists";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = "";
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = "then";
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
